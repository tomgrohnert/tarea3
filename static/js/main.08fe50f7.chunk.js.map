{"version":3,"sources":["server.js","App.js","reportWebVitals.js","index.js"],"names":["socket","io","path","truck_icon","Icon","iconUrl","iconSize","trucks","code","position","origin","destination","engine","truck","capacity","staff","status","App","useState","setLocation","activeTruck","setActiveTruck","send_fix","emit","once","data_fix","console","log","data2","i","length","newOrigin","j","useEffect","on","data","newLocation","data3","str1","concat","source","Map","center","zoom","TileLayer","url","attribution","map","Marker","key","icon","onClick","Popup","onClose","Polyline","positions","direction","height","gap","style","border","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kPAMeA,EAJAC,YAAG,wDAAyD,CACzEC,KAAM,a,+DCMFC,EAAa,IAAIC,OAAK,CAC1BC,QAAS,uBACTC,SAAU,CAAC,GAAG,MAGZC,EAAS,CAAC,CAACC,KAAM,SAAUC,SAAU,CAAC,EAAE,GAAIC,OAAQ,CAAC,EAAE,GAAIC,YAAa,CAAC,EAAE,GAAIC,OAAQ,GAAIC,MAAO,GAAIC,SAAU,EAAGC,MAAO,CAAC,GAAG,GAAG,IAAKC,OAAQ,MACjJ,CAACR,KAAM,SAAUC,SAAU,CAAC,EAAE,GAAIC,OAAQ,CAAC,EAAE,GAAIC,YAAa,CAAC,EAAE,GAAIC,OAAQ,GAAIC,MAAO,GAAIC,SAAU,EAAGC,MAAO,CAAC,GAAG,GAAG,IAAKC,OAAQ,MACpI,CAACR,KAAM,SAAUC,SAAU,CAAC,EAAE,GAAIC,OAAQ,CAAC,EAAE,GAAIC,YAAa,CAAC,EAAE,GAAIC,OAAQ,GAAIC,MAAO,GAAIC,SAAU,EAAGC,MAAO,CAAC,GAAG,GAAG,IAAKC,OAAQ,MACpI,CAACR,KAAM,SAAUC,SAAU,CAAC,EAAE,GAAIC,OAAQ,CAAC,EAAE,GAAIC,YAAa,CAAC,EAAE,GAAIC,OAAQ,GAAIC,MAAO,GAAIC,SAAU,EAAGC,MAAO,CAAC,GAAG,GAAG,IAAKC,OAAQ,MACpI,CAACR,KAAM,SAAUC,SAAU,CAAC,EAAE,GAAIC,OAAQ,CAAC,EAAE,GAAIC,YAAa,CAAC,EAAE,GAAIC,OAAQ,GAAIC,MAAO,GAAIC,SAAU,EAAGC,MAAO,CAAC,GAAG,GAAG,IAAKC,OAAQ,OAEtH,SAASC,IAEtB,MAAgCC,mBAAS,CAAC,EAAE,IAA5C,mBAAiBC,GAAjB,WACA,EAAsCD,mBAAS,MAA/C,mBAAOE,EAAP,KAAoBC,EAApB,KA6EA,SAASC,EAAST,GAChBb,EAAOuB,KAAK,MAAO,CAACf,KAAMK,EAAML,OAChCR,EAAOwB,KAAK,OAAO,SAACC,GAClBC,QAAQC,IAAIF,GACRA,EAASjB,OAASK,EAAML,OAC1BK,EAAMG,OAAS,SA+BrB,OA9GAhB,EAAOuB,KAAK,UAEVvB,EAAOwB,KAAK,UAAU,SAACI,GAErB,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CACrC,IAAIE,EAAY,CAACH,EAAMC,GAAGnB,OAAO,GAAIkB,EAAMC,GAAGnB,OAAO,IACrDH,EAAOsB,GAAGnB,OAAO,GAAKqB,EAAU,GAChCxB,EAAOsB,GAAGnB,OAAO,GAAKqB,EAAU,GAChCxB,EAAOsB,GAAGlB,YAAY,GAAKiB,EAAMC,GAAGlB,YAAY,GAChDJ,EAAOsB,GAAGlB,YAAY,GAAKiB,EAAMC,GAAGlB,YAAY,GAChDJ,EAAOsB,GAAGjB,OAASgB,EAAMC,GAAGjB,OAC5BL,EAAOsB,GAAGhB,MAAQe,EAAMC,GAAGhB,MAC3BN,EAAOsB,GAAGf,SAAWc,EAAMC,GAAGf,SAC9B,IAAK,IAAIkB,EAAI,EAAGA,EAAIJ,EAAMC,GAAGd,MAAMe,OAAQE,IACzCzB,EAAOsB,GAAGd,MAAMiB,GAAKJ,EAAMC,GAAGd,MAAMiB,OAK5CC,qBAAU,WACRjC,EAAOkC,GAAG,YAAY,SAACC,GAEnB,IAAIC,EAAc,CAACD,EAAK1B,SAAS,GAAI0B,EAAK1B,SAAS,IACnDU,EAAYiB,GACM,WAAdD,EAAK3B,MAA0C,OAArBD,EAAO,GAAGS,QACtCT,EAAO,GAAGE,SAAS,GAAK2B,EAAY,GACpC7B,EAAO,GAAGE,SAAS,GAAK2B,EAAY,IAEf,WAAdD,EAAK3B,MAA0C,OAArBD,EAAO,GAAGS,QAC3CT,EAAO,GAAGE,SAAS,GAAK2B,EAAY,GACpC7B,EAAO,GAAGE,SAAS,GAAK2B,EAAY,IAEf,WAAdD,EAAK3B,MAA0C,OAArBD,EAAO,GAAGS,QAC3CT,EAAO,GAAGE,SAAS,GAAK2B,EAAY,GACpC7B,EAAO,GAAGE,SAAS,GAAK2B,EAAY,IAEf,WAAdD,EAAK3B,MAA0C,OAArBD,EAAO,GAAGS,QAC3CT,EAAO,GAAGE,SAAS,GAAK2B,EAAY,GACpC7B,EAAO,GAAGE,SAAS,GAAK2B,EAAY,IAEf,WAAdD,EAAK3B,MAA0C,OAArBD,EAAO,GAAGS,SAC3CT,EAAO,GAAGE,SAAS,GAAK2B,EAAY,GACpC7B,EAAO,GAAGE,SAAS,GAAK2B,EAAY,SAGzC,CAACpC,IAEJiC,qBAAU,WACRjC,EAAOkC,GAAG,WAAW,SAACG,GAClBX,QAAQC,IAAIU,GACZ,IAAIC,EAAO,SACQ,WAAfD,EAAM7B,MAA0C,OAArBD,EAAO,GAAGS,OACvCT,EAAO,GAAGS,OAASsB,EAAKC,OAAOF,EAAMG,QAGf,WAAfH,EAAM7B,MAA0C,OAArBD,EAAO,GAAGS,OAC5CT,EAAO,GAAGS,OAASsB,EAAKC,OAAOF,EAAMG,QAGf,WAAfH,EAAM7B,MAA0C,OAArBD,EAAO,GAAGS,OAC5CT,EAAO,GAAGS,OAASsB,EAAKC,OAAOF,EAAMG,QAGf,WAAfH,EAAM7B,MAA0C,OAArBD,EAAO,GAAGS,OAC5CT,EAAO,GAAGS,OAASsB,EAAKC,OAAOF,EAAMG,QAGf,WAAfH,EAAM7B,MAA0C,OAArBD,EAAO,GAAGS,SAC5CT,EAAO,GAAGS,OAASsB,EAAKC,OAAOF,EAAMG,cAI1C,CAACxC,IAwCJ,6BACE,kBAACyC,EAAA,EAAD,CAAKC,OAAQ,EAAE,MAAO,MAAOC,KAAM,IACjC,kBAACC,EAAA,EAAD,CACEC,IAAI,qDACJC,YAAY,2EAEbvC,EAAOwC,KAAI,SAAAlC,GAAK,OACf,kBAACmC,EAAA,EAAD,CACEC,IAAKpC,EAAML,KACXC,SAAU,CACRI,EAAMJ,SAAS,GACfI,EAAMJ,SAAS,IAEjByC,KAAQ/C,EAERgD,QAAS,WACP9B,EAAeR,SAKpBO,GACG,kBAACgC,EAAA,EAAD,CACE3C,SAAU,CACRW,EAAYX,SAAS,GACrBW,EAAYX,SAAS,IAEvB4C,QAAS,WACPhC,EAAe,QAGjB,6BACE,4BAAKD,EAAYZ,MACjB,qCAAWY,EAAYR,QACvB,oCAAUQ,EAAYP,SAI7BN,EAAOwC,KAAI,SAAAlC,GAAK,OACf,kBAACyC,EAAA,EAAD,CAAUL,IAAKpC,EAAML,KACrB+C,UAAW,CACT1C,EAAMH,OACNG,EAAMF,mBAIZ,kBAAC,IAAD,CAAM6C,UAAU,MAAMC,OAAO,WAAWC,IAAI,YAC1C,yBACEC,MACE,CACAC,OAAQ,oBAIV,sCAAYrD,EAAO,GAAGC,KAAtB,KACA,2BAAG,sCAAH,IAAmBD,EAAO,GAAGG,OAAO,GAApC,KAA0CH,EAAO,GAAGG,OAAO,IAC3D,2BAAG,uCAAH,IAAoBH,EAAO,GAAGI,YAAY,GAA1C,KAAgDJ,EAAO,GAAGI,YAAY,IACtE,2BAAG,sCAAH,IAAmBJ,EAAO,GAAGS,QAC7B,4BAAQmC,QAAS,kBAAM7B,EAASf,EAAO,MACrC,yCAIJ,yBACEoD,MACE,CACAC,OAAQ,oBAIV,sCAAYrD,EAAO,GAAGC,KAAtB,KACA,2BAAG,sCAAH,IAAmBD,EAAO,GAAGG,OAAO,GAApC,KAA0CH,EAAO,GAAGG,OAAO,IAC3D,2BAAG,uCAAH,IAAoBH,EAAO,GAAGI,YAAY,GAA1C,KAAgDJ,EAAO,GAAGI,YAAY,IACtE,2BAAG,sCAAH,IAAmBJ,EAAO,GAAGS,QAC7B,4BAAQmC,QAAS,kBAAM7B,EAASf,EAAO,MACrC,yCAIJ,yBACEoD,MACE,CACAC,OAAQ,oBAIV,sCAAYrD,EAAO,GAAGC,KAAtB,KACA,2BAAG,sCAAH,IAAmBD,EAAO,GAAGG,OAAO,GAApC,KAA0CH,EAAO,GAAGG,OAAO,IAC3D,2BAAG,uCAAH,IAAoBH,EAAO,GAAGI,YAAY,GAA1C,KAAgDJ,EAAO,GAAGI,YAAY,IACtE,2BAAG,sCAAH,IAAmBJ,EAAO,GAAGS,QAC7B,4BAAQmC,QAAS,kBAAM7B,EAASf,EAAO,MACrC,yCAIJ,yBACEoD,MACE,CACAC,OAAQ,oBAIV,sCAAYrD,EAAO,GAAGC,KAAtB,KACA,2BAAG,sCAAH,IAAmBD,EAAO,GAAGG,OAAO,GAApC,KAA0CH,EAAO,GAAGG,OAAO,IAC3D,2BAAG,uCAAH,IAAoBH,EAAO,GAAGI,YAAY,GAA1C,KAAgDJ,EAAO,GAAGI,YAAY,IACtE,2BAAG,sCAAH,IAAmBJ,EAAO,GAAGS,QAC7B,4BAAQmC,QAAS,kBAAM7B,EAASf,EAAO,MACrC,yCAIJ,yBACEoD,MACE,CACAC,OAAQ,oBAIV,sCAAYrD,EAAO,GAAGC,KAAtB,KACA,2BAAG,sCAAH,IAAmBD,EAAO,GAAGG,OAAO,GAApC,KAA0CH,EAAO,GAAGG,OAAO,IAC3D,2BAAG,uCAAH,IAAoBH,EAAO,GAAGI,YAAY,GAA1C,KAAgDJ,EAAO,GAAGI,YAAY,IACtE,2BAAG,sCAAH,IAAmBJ,EAAO,GAAGS,QAC7B,4BAAQmC,QAAS,kBAAM7B,EAASf,EAAO,MACrC,2CCrQV,IAYesD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.08fe50f7.chunk.js","sourcesContent":["import { io } from \"socket.io-client\";\n\nconst socket = io('wss://tarea-3-websocket.2021-2.tallerdeintegracion.cl', {\n  path: '/trucks/',\n});\n\nexport default socket;","import React, { useState, useEffect } from 'react';\n// import { io } from \"socket.io-client\";\nimport  socket  from './server.js';\nimport { Icon } from 'leaflet';\nimport { Map, Marker, Popup, TileLayer, Polyline } from 'react-leaflet';\nimport './App.css';\nimport {Flex, View} from '@adobe/react-spectrum'\n\n\nconst truck_icon = new Icon({\n  iconUrl: '/Cargo_Truck.svg.png',\n  iconSize: [25,25]\n});\n\nvar trucks = [{code: 'CAT013', position: [0,0], origin: [0,0], destination: [0,0], engine: '', truck: '', capacity: 0, staff: [{},{},{}], status: 'ok'}, \n {code: 'CAT015', position: [0,0], origin: [0,0], destination: [0,0], engine: '', truck: '', capacity: 0, staff: [{},{},{}], status: 'ok'},\n {code: 'KOM401', position: [0,0], origin: [0,0], destination: [0,0], engine: '', truck: '', capacity: 0, staff: [{},{},{}], status: 'ok'},\n {code: 'KOM500', position: [0,0], origin: [0,0], destination: [0,0], engine: '', truck: '', capacity: 0, staff: [{},{},{}], status: 'ok'},\n {code: 'KOM501', position: [0,0], origin: [0,0], destination: [0,0], engine: '', truck: '', capacity: 0, staff: [{},{},{}], status: 'ok'}];\n\nexport default function App() {\n\n  const [location, setLocation] = useState([0,0]);\n  const [activeTruck, setActiveTruck] = useState(null);\n  // const [status, setStatus] = useState(true);\n\n  socket.emit(\"TRUCKS\");\n  // useEffect(() => {\n    socket.once(\"TRUCKS\", (data2) => {\n      // console.log(data2);\n      for (let i = 0; i < data2.length; i++) {\n        let newOrigin = [data2[i].origin[0], data2[i].origin[1]];\n        trucks[i].origin[0] = newOrigin[0];\n        trucks[i].origin[1] = newOrigin[1];\n        trucks[i].destination[0] = data2[i].destination[0];\n        trucks[i].destination[1] = data2[i].destination[1];\n        trucks[i].engine = data2[i].engine;\n        trucks[i].truck = data2[i].truck;\n        trucks[i].capacity = data2[i].capacity;\n        for (let j = 0; j < data2[i].staff.length; j++){\n          trucks[i].staff[j] = data2[i].staff[j];\n        }\n      }\n    });\n  // });\n  useEffect(() => {\n    socket.on(\"POSITION\", (data) => {\n        // console.log(data);\n        let newLocation = [data.position[0], data.position[1]];\n        setLocation(newLocation);\n        if (data.code === 'CAT013' && trucks[0].status === 'ok'){\n          trucks[0].position[0] = newLocation[0];\n          trucks[0].position[1] = newLocation[1];\n        }\n        else if (data.code === 'CAT015' && trucks[1].status === 'ok'){\n          trucks[1].position[0] = newLocation[0];\n          trucks[1].position[1] = newLocation[1];\n        }\n        else if (data.code === 'KOM401' && trucks[2].status === 'ok'){\n          trucks[2].position[0] = newLocation[0];\n          trucks[2].position[1] = newLocation[1];\n        }\n        else if (data.code === 'KOM500' && trucks[3].status === 'ok'){\n          trucks[3].position[0] = newLocation[0];\n          trucks[3].position[1] = newLocation[1];\n        }\n        else if (data.code === 'KOM501' && trucks[4].status === 'ok'){\n          trucks[4].position[0] = newLocation[0];\n          trucks[4].position[1] = newLocation[1];\n        }\n    });\n  }, [socket]);\n\n  useEffect(() => {\n    socket.on(\"FAILURE\", (data3) => {\n        console.log(data3);\n        let str1 = \"Falla \";\n        if (data3.code === 'CAT013' && trucks[0].status === 'ok'){\n          trucks[0].status = str1.concat(data3.source);\n          // TODO mostrar la razon de la falla en la info de camiones\n        }\n        else if (data3.code === 'CAT015' && trucks[1].status === 'ok'){\n          trucks[1].status = str1.concat(data3.source);\n          // TODO mostrar la razon de la falla en la info de camiones\n        }\n        else if (data3.code === 'KOM401' && trucks[2].status === 'ok'){\n          trucks[2].status = str1.concat(data3.source);\n          // TODO mostrar la razon de la falla en la info de camiones\n        }\n        else if (data3.code === 'KOM500' && trucks[3].status === 'ok'){\n          trucks[3].status = str1.concat(data3.source);\n          // TODO mostrar la razon de la falla en la info de camiones\n        }\n        else if (data3.code === 'KOM501' && trucks[4].status === 'ok'){\n          trucks[4].status = str1.concat(data3.source);\n          // TODO mostrar la razon de la falla en la info de camiones\n        }\n    });\n  }, [socket]);\n\n  function send_fix(truck){\n    socket.emit(\"FIX\", {code: truck.code});\n    socket.once(\"FIX\", (data_fix) => {\n      console.log(data_fix);\n      if (data_fix.code === truck.code){\n        truck.status = 'ok';\n      }\n    });\n  };\n\n  // useEffect(() => {\n  //   socket.on(\"FIX\", (data4) => {\n  //       console.log(data4);\n  //       if (data4.code === 'CAT013'){\n  //         trucks[0].status = 'ok';\n  //         // TODO mostrar la razon de la falla en la info de camiones\n  //       }\n  //       else if (data4.code === 'CAT015'){\n  //         trucks[1].status = 'ok';\n  //         // TODO mostrar la razon de la falla en la info de camiones\n  //       }\n  //       else if (data4.code === 'KOM401'){\n  //         trucks[2].status = 'ok';\n  //         // TODO mostrar la razon de la falla en la info de camiones\n  //       }\n  //       else if (data4.code === 'KOM500'){\n  //         trucks[3].status = 'ok';\n  //         // TODO mostrar la razon de la falla en la info de camiones\n  //       }\n  //       else if (data4.code === 'KOM501'){\n  //         trucks[4].status = 'ok';\n  //         // TODO mostrar la razon de la falla en la info de camiones\n  //       }\n  //   });\n  // });\n\n  return (\n\n  <div>\n    <Map center={[-21.9, -68.8]} zoom={10}>\n      <TileLayer\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n      />\n      {trucks.map(truck => (\n        <Marker\n          key={truck.code}\n          position={[\n            truck.position[0],\n            truck.position[1]\n          ]}\n          icon = {truck_icon}\n\n          onClick={() => {\n            setActiveTruck(truck);\n          }}\n        />\n      ))}\n\n      {activeTruck && (\n          <Popup\n            position={[\n              activeTruck.position[0],\n              activeTruck.position[1]\n            ]}\n            onClose={() => {\n              setActiveTruck(null);\n            }}\n          >\n            <div>\n              <h2>{activeTruck.code}</h2>\n              <p>Engine:{activeTruck.engine}</p>\n              <p>Truck:{activeTruck.truck}</p>\n            </div>\n          </Popup>\n        )}\n      {trucks.map(truck => (\n        <Polyline key={truck.code}\n        positions={[\n          truck.origin,\n          truck.destination,\n        ]} />\n      ))}\n    </Map>\n    <Flex direction=\"row\" height=\"size-800\" gap=\"size-100\">\n      <div\n        style={\n          {\n          border: '2px solid black'\n          }\n        }\n      >\n        <h1>Camion {trucks[0].code} </h1>\n        <p><b>Origen:</b> {trucks[0].origin[0]}, {trucks[0].origin[1]}</p>\n        <p><b>Destino:</b> {trucks[0].destination[0]}, {trucks[0].destination[1]}</p>\n        <p><b>Status:</b> {trucks[0].status}</p>\n        <button onClick={() => send_fix(trucks[0])}>\n          <b>Arreglar</b>\n        </button>\n      </div>\n\n      <div\n        style={\n          {\n          border: '2px solid black'\n          }\n        }\n      >\n        <h1>Camion {trucks[1].code} </h1>\n        <p><b>Origen:</b> {trucks[1].origin[0]}, {trucks[1].origin[1]}</p>\n        <p><b>Destino:</b> {trucks[1].destination[0]}, {trucks[1].destination[1]}</p>\n        <p><b>Status:</b> {trucks[1].status}</p>\n        <button onClick={() => send_fix(trucks[1])}>\n          <b>Arreglar</b>\n        </button>\n      </div>\n\n      <div\n        style={\n          {\n          border: '2px solid black'\n          }\n        }\n      >\n        <h1>Camion {trucks[2].code} </h1>\n        <p><b>Origen:</b> {trucks[2].origin[0]}, {trucks[2].origin[1]}</p>\n        <p><b>Destino:</b> {trucks[2].destination[0]}, {trucks[2].destination[1]}</p>\n        <p><b>Status:</b> {trucks[2].status}</p>\n        <button onClick={() => send_fix(trucks[2])}>\n          <b>Arreglar</b>\n        </button>\n      </div>\n\n      <div\n        style={\n          {\n          border: '2px solid black'\n          }\n        }\n      >\n        <h1>Camion {trucks[3].code} </h1>\n        <p><b>Origen:</b> {trucks[3].origin[0]}, {trucks[3].origin[1]}</p>\n        <p><b>Destino:</b> {trucks[3].destination[0]}, {trucks[3].destination[1]}</p>\n        <p><b>Status:</b> {trucks[3].status}</p>\n        <button onClick={() => send_fix(trucks[3])}>\n          <b>Arreglar</b>\n        </button>\n      </div>\n\n      <div\n        style={\n          {\n          border: '2px solid black'\n          }\n        }\n      >\n        <h1>Camion {trucks[4].code} </h1>\n        <p><b>Origen:</b> {trucks[4].origin[0]}, {trucks[4].origin[1]}</p>\n        <p><b>Destino:</b> {trucks[4].destination[0]}, {trucks[4].destination[1]}</p>\n        <p><b>Status:</b> {trucks[4].status}</p>\n        <button onClick={() => send_fix(trucks[4])}>\n          <b>Arreglar</b>\n        </button>\n      </div>\n    </Flex>\n  </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}